/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ctpv;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import javax.swing.ImageIcon;

/**
 *
 * @author Yeray
 */
public class MonitorVentas extends javax.swing.JFrame {

    /**
     * Creates new form MonitorVentas
     */
    public MonitorVentas() {
        initComponents();

        //Establecer el icono
        ImageIcon icono = new ImageIcon("..\\TPV\\src\\imagenes\\billete.png");
        this.setIconImage(icono.getImage());

        //Hilo escuchador, para liberar la interfaz
        Thread escuchador = new Thread(new HiloMonitor(jTextFieldLineas, jTextFieldManana, jTextFieldTarde));
        escuchador.start();

        //Comprobar que las claves existen y sino las creamos
        comprobarClaves();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldLineas = new javax.swing.JTextField();
        jTextFieldManana = new javax.swing.JTextField();
        jTextFieldTarde = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monitor de Ventas");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Número de lineas del fichero:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Total ventas por la mañana (8-14horas):");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Total ventas por la tarde (16-20horas):");

        jTextFieldLineas.setEditable(false);

        jTextFieldManana.setEditable(false);

        jTextFieldTarde.setEditable(false);
        jTextFieldTarde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTardeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(65, 65, 65)
                        .addComponent(jTextFieldTarde, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(132, 132, 132)
                        .addComponent(jTextFieldLineas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(65, 65, 65)
                        .addComponent(jTextFieldManana, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldLineas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldManana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldTarde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(178, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTardeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTardeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTardeActionPerformed

    public void comprobarClaves() {
        try {
            //Comprobar si existe, ya que si no existe, va al catch
            FileInputStream fiPu = new FileInputStream(("publica.txt"));
            FileInputStream fiPri = new FileInputStream(("privada.txt"));

            byte[] cPublicaCompleta = new byte[1024];
            fiPu.read(cPublicaCompleta);

            byte[] cPrivadaCompleta = new byte[1024];
            fiPri.read(cPrivadaCompleta);

            //Creamos un almacen de claves
            KeyFactory keyDSA = KeyFactory.getInstance("DSA");

            //Desencriptamos el array de bytes que ya hemos obtenido
            PKCS8EncodedKeySpec pk8s = new PKCS8EncodedKeySpec(cPrivadaCompleta);
            X509EncodedKeySpec x509 = new X509EncodedKeySpec(cPublicaCompleta);

        } catch (Exception e) { // GENERA UNAS NUEVAS Y VUELVE A ESTE MÉTODO
            crearClaves();
            comprobarClaves();
        }
    }

    public void crearClaves() {
        try {
            //Inicialización del generador de claves
            KeyPairGenerator generadorClaves = KeyPairGenerator.getInstance("DSA");
            SecureRandom generadorDeAleatorios = SecureRandom.getInstance("SHA1PRNG"); //Creo un random seguro para alimentar algo
            //1024 Tamaño en bits de la clave
            generadorClaves.initialize(1024, generadorDeAleatorios);

            //CREAR PAREJA DE CLAVES
            KeyPair par = generadorClaves.generateKeyPair();
            PrivateKey clavePrivada = par.getPrivate();
            PublicKey clavePublica = par.getPublic();

            //GUARDAMOS LAS CLAVES
            guardarClaves(clavePublica, clavePrivada);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void guardarClaves(PublicKey publica, PrivateKey privada) throws FileNotFoundException, IOException {

        File destinoPrivada = new File("privada.txt");
        File destinoPublica = new File("publica.txt");

        //Guardo la clave privada
        FileOutputStream foPri = new FileOutputStream(destinoPrivada);
        PKCS8EncodedKeySpec pkc8Privada = new PKCS8EncodedKeySpec(privada.getEncoded());
        foPri.write(pkc8Privada.getEncoded());
        foPri.close();

        FileOutputStream foPu = new FileOutputStream(destinoPublica);
        X509EncodedKeySpec x509Publica = new X509EncodedKeySpec(publica.getEncoded());
        foPu.write(x509Publica.getEncoded());
        foPu.close();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitorVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitorVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitorVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitorVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldLineas;
    private javax.swing.JTextField jTextFieldManana;
    private javax.swing.JTextField jTextFieldTarde;
    // End of variables declaration//GEN-END:variables
}
